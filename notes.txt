TNPG: GammaRay, Jun Hong Wang + Bob, Jomin Zhang + Chompsky, + Kevin Xiao + Mr. Swag
APCS PD6
Lab03 - Get Empirical
2021-12-16

DISCO:
Print statements are much slower than mathematical operations in Java.
When testing out the currentTimeMillis() method, we found out that it was kind of inaccurate.
Each operating system measures time differently, and the smallest amount of time actually measured is probably bigger than 1ms.
When we tested it out, we made a for loop that iterated 50000 times, and it only took 0-1ms, but when we used a different method,
nanoTime(), this put the actual time at 4.25-4.35ms.
Binary search is wildly efficient, being able to find an index of an array of length 8 million and find the index of that array 10,000 times in only
6 milliseconds on average.
Binary search is so much more efficient that linear search, that 100,000 iterations of binary search is still leagues above efficiency of just 10 iterations of linear search, given that the array is at least 100,000 in length.

QCC:
Pretty much as expected, the Binary Search algorithm for the smallest array took pretty much no time. 
Why were we not allowed to use nanotime?

GALLERY TOUR:
  Team AllBrians:
    - used tables in to display data
    - max array size 100,000,000, otherwise they had to increase heap size
    - similar tests, similar results
      - linear is faster for short arrays, binary for longer arrays
    - interesting occurence: max time for index sometimes < min time for index
      - not unique to just very small arrays, can happen to arrays of 10,000 as well
      
  - Team emp_JWJ:
    - max array length 2^27, array length 2^n
    - average returns doubles, fractions of a second
    - randomly generated targets, 20 iterations each
      - no hard set best/worst case scenario
  
  - Team Four: 
    - 3 scenarios:
      - Searching when target is present
      - Searching when target is not present
      - Finding the minimum length of the array for binary search to become faster than linear search
    - did not randomize tests, instead searched for every element in an array
    - limit for length was 5,000,000, otherwise it would continually run (not heap error)
    - runs until binary time - linear time is negative
